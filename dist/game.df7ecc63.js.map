{"version":3,"sources":["game.js"],"names":["timer","maxTime","timeInSeconds","score","totalNumbers","currentNumber","items","document","querySelectorAll","selectedIndex","numberOfSelectedItems","itemsArray","hardMode","numA","numB","numAB","selectedDifficulty","sessionStorage","getItem","gameProperties","extraTime","subTime","gainedPoints","lostPoints","pointsForFinishing","backgroundMusic","getElementById","correctSound","wrongSound","audioContext","AudioContext","setDifficulty","setHardMode","Error","instructions","operation","textContent","Math","floor","random","concat","generateRandomArray","n","randomArray","length","randomNumber","indexOf","push","sort","a","b","shuffleArray","array","shuffled","_toConsumableArray","i","j","_ref","handleInteraction","input","targetItem","Event","target","clickedNumber","parseInt","finishLevel","wrongAnswer","rightAnswer","handleItemClick","event","resume","updateScore","addTime","play","repaintGameContainer","classList","add","setTimeout","remove","toLeaderboard","setItem","window","location","href","generateitems","numberOfItems","container","Array","from","keys","map","definitiveArray","item","createElement","className","id","addEventListener","appendChild","body","innerHTML","_itemsArray2","_slicedToArray","highlightSelected","forEach","index","handleKeyPress","key","max","min","points","startTimer","setInterval","updateTimer","clearInterval","minutes","seconds","displayTime","String","padStart","innerText","progressBar","percentage","style","width","time","user","endGameBtn"],"mappings":"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","file":"game.df7ecc63.js","sourceRoot":"../src","sourcesContent":["// timer variables\nlet timer;\nlet maxTime = 0;\nlet timeInSeconds = 0;\nlet score = 0;\n\n// game variables\nlet totalNumbers = 4;\nlet currentNumber = 1;\nlet items = document.querySelectorAll(\".item\");\nlet selectedIndex = 0;\nlet numberOfSelectedItems = 0;\nlet itemsArray = [];\nlet hardMode = false;\nlet numA = 0;\nlet numB = 0;\nlet numAB = 0;\n\nconst selectedDifficulty = sessionStorage.getItem(\"DIFFICULTY\");\n\nconst gameProperties = {\n  extraTime: 0,\n  subTime: 0,\n  gainedPoints: 0,\n  lostPoints: 0,\n  pointsForFinishing: 0,\n};\n\n// manage audio files\nconst backgroundMusic = document.getElementById(\"backgroundMusic\");\nconst correctSound = document.getElementById(\"correctSound\");\nconst wrongSound = document.getElementById(\"wrongSound\");\nconst audioContext = new AudioContext();\n\n// set properties depending on difficulty\n\nfunction setDifficulty() {\n  switch (selectedDifficulty) {\n    case \"easy\":\n      gameProperties.extraTime = 10;\n      gameProperties.subTime = -1;\n      gameProperties.gainedPoints = 100;\n      gameProperties.lostPoints = -50;\n      gameProperties.pointsForFinishing = 500;\n      maxTime = 30;\n      break;\n    case \"medium\":\n      gameProperties.extraTime = 8;\n      gameProperties.subTime = -2;\n      gameProperties.gainedPoints = 150;\n      gameProperties.lostPoints = -75;\n      gameProperties.pointsForFinishing = 600;\n      maxTime = 25;\n      break;\n    case \"hard\":\n      gameProperties.extraTime = 6;\n      gameProperties.subTime = -3;\n      gameProperties.gainedPoints = 200;\n      gameProperties.lostPoints = -100;\n      gameProperties.pointsForFinishing = 700;\n      maxTime = 20;\n      setHardMode();\n      break;\n    default:\n      throw new Error(\"Unknown difficulty\");\n  }\n}\n\n// hard mode works with different logic\n\nfunction setHardMode() {\n  hardMode = true;\n  const instructions = document.getElementById(\"instructions\");\n  const operation = document.getElementById(\"operation\");\n  instructions.textContent = \"Click the number that completes the following operation\";\n  numA = Math.floor(Math.random() * 50) + 1;\n  numB = Math.floor(Math.random() * 50) + 1;\n  numAB = numA + numB;\n  operation.textContent = `____ + ${numB} = ${numAB}`;\n}\n\n// general functions\n\nfunction generateRandomArray(n) {\n  const randomArray = hardMode ? [numA] : [];\n  while (randomArray.length < n) {\n    const randomNumber = Math.floor(Math.random() * 99) + 1;\n\n    if (randomArray.indexOf(randomNumber) === -1) {\n      randomArray.push(randomNumber);\n    }\n  }\n\n  randomArray.sort((a, b) => a - b);\n\n  return randomArray;\n}\n\nfunction shuffleArray(array) {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n}\n\nfunction handleInteraction(input) {\n  const targetItem = input instanceof Event ? input.target : input;\n  const clickedNumber = parseInt(targetItem.textContent, 10);\n\n  if (hardMode) {\n    if (clickedNumber === numA) {\n      finishLevel();\n    } else {\n      wrongAnswer(targetItem);\n    }\n  } else if (clickedNumber === currentNumber) {\n    rightAnswer(targetItem);\n    if (numberOfSelectedItems === totalNumbers) {\n      finishLevel();\n    }\n  } else {\n    wrongAnswer(targetItem);\n  }\n}\n\nfunction handleItemClick(event) {\n  handleInteraction(event);\n  audioContext.resume();\n}\n\nfunction finishLevel() {\n  updateScore(gameProperties.pointsForFinishing);\n  addTime(gameProperties.extraTime);\n  if (hardMode) {\n    correctSound.play();\n    setHardMode();\n  }\n  repaintGameContainer();\n}\n\nfunction rightAnswer(target) {\n  correctSound.play();\n  target.classList.add(\"completed\");\n  numberOfSelectedItems++;\n  currentNumber = itemsArray[numberOfSelectedItems];\n  updateScore(gameProperties.gainedPoints);\n}\n\nfunction wrongAnswer(target) {\n  wrongSound.play();\n  target.classList.add(\"wrong\");\n  updateScore(gameProperties.lostPoints);\n  addTime(gameProperties.subTime);\n  setTimeout(() => {\n    target.classList.remove(\"wrong\");\n  }, 300);\n}\n\nfunction toLeaderboard() {\n  sessionStorage.setItem('SCORE', score);\n  window.location.href = \"leaderBoard.html\";\n}\n\nfunction generateitems(numberOfItems) {\n  const container = document.getElementById(\"itemContainer\");\n\n  switch (selectedDifficulty) {\n    case \"easy\":\n      itemsArray = Array.from(Array(numberOfItems).keys()).map((i) => i + 1);\n      break;\n    case \"medium\":\n    case \"hard\":\n      itemsArray = generateRandomArray(numberOfItems);\n      break;\n    default:\n      break;\n  }\n  const definitiveArray = shuffleArray(itemsArray);\n\n  for (let i = 1; i <= numberOfItems; i++) {\n    const item = document.createElement(\"div\");\n    item.textContent = definitiveArray[i - 1];\n    item.className = \"item\";\n    item.id = `item-${definitiveArray[i - 1]}`;\n    item.addEventListener(\"click\", handleItemClick);\n    container.appendChild(item);\n  }\n\n  document.body.appendChild(container);\n}\n\nfunction repaintGameContainer() {\n  totalNumbers++;\n  numberOfSelectedItems = 0;\n  document.getElementById(\"itemContainer\").innerHTML = \"\";\n  generateitems(totalNumbers);\n  items = document.querySelectorAll(\".item\");\n  selectedIndex = -1;\n  [currentNumber] = itemsArray;\n}\n\nfunction highlightSelected() {\n  items.forEach((item, index) => {\n    if (index === selectedIndex) {\n      item.classList.add(\"selected\");\n    } else {\n      item.classList.remove(\"selected\");\n    }\n  });\n}\n\nfunction handleKeyPress(event) {\n  if (event.key === \"ArrowLeft\") {\n    selectedIndex = Math.max(0, selectedIndex - 1);\n  } else if (event.key === \"ArrowRight\") {\n    selectedIndex = Math.min(items.length - 1, selectedIndex + 1);\n  } else if (event.key === \"Enter\") {\n    const selectedItem = items[selectedIndex];\n    handleInteraction(selectedItem);\n  }\n\n  highlightSelected();\n}\n\nfunction updateScore(points) {\n  score += points;\n  document.getElementById(\"displayScore\").innerHTML = ` ${score}`;\n}\n\nfunction startTimer() {\n  timeInSeconds = maxTime;\n  timer = setInterval(() => {\n    if (timeInSeconds > 0) {\n      timeInSeconds--;\n      updateTimer();\n    } else {\n      clearInterval(timer);\n      toLeaderboard();\n    }\n  }, 1000);\n}\n\nfunction updateTimer() {\n  const minutes = Math.floor(timeInSeconds / 60);\n  const seconds = timeInSeconds % 60;\n\n  const displayTime = `${String(minutes).padStart(2, \"0\")}:${String(\n    seconds,\n  ).padStart(2, \"0\")}`;\n  document.getElementById(\"timer\").innerText = displayTime;\n\n  const progressBar = document.getElementById(\"progress-bar\");\n\n  const percentage = (timeInSeconds / maxTime) * 100;\n  progressBar.style.width = `${percentage}%`;\n}\n\nfunction addTime(time) {\n  timeInSeconds = Math.min(timeInSeconds + time, maxTime);\n  updateTimer();\n}\n\n// First time loading window actions\n\nwindow.addEventListener(\"load\", () => {\n  const user = sessionStorage.getItem(\"USER\");\n  const endGameBtn = document.getElementById(\"btn-endGame\");\n  setDifficulty();\n  repaintGameContainer();\n  document.addEventListener(\"keydown\", handleKeyPress);\n  highlightSelected();\n  document.getElementById(\"displayName\").innerHTML = ` ${user}`;\n  document.getElementById(\"displayScore\").innerHTML = ` ${score}`;\n  endGameBtn.addEventListener(\"click\", toLeaderboard);\n  startTimer();\n  backgroundMusic.play();\n});\n"]}