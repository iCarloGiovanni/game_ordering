{"version":3,"sources":["timer.js"],"names":["timer","maxTime","timeInSeconds","score","toLeaderboard","sessionStorage","setItem","window","location","href","setMaxTime","selectedDifficulty","getItem","Error","updateScore","points","document","getElementById","innerHTML","concat","updateTimer","minutes","Math","floor","seconds","displayTime","String","padStart","innerText","progressBar","percentage","style","width","addTime","time","min","startTimer","setInterval","clearInterval","addEventListener","user","endGameBtn"],"mappings":"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","file":"timer.ecf9e604.js","sourceRoot":"../src","sourcesContent":["let timer;\nlet maxTime = 0;\nlet timeInSeconds = 0;\nlet score = 0;\n\nfunction toLeaderboard() {\n  sessionStorage.setItem('SCORE', score);\n  window.location.href = \"leaderBoard.html\";\n}\n\nfunction setMaxTime() {\n  const selectedDifficulty = sessionStorage.getItem('DIFFICULTY');\n\n  switch (selectedDifficulty) {\n    case 'easy':\n      maxTime = 30;\n      break;\n    case 'medium':\n      maxTime = 20;\n      break;\n    case 'hard':\n      maxTime = 15;\n      break;\n    default:\n      throw new Error('Unknown difficulty');\n  }\n  timeInSeconds = maxTime;\n}\n\nfunction updateScore(points) {\n  score += points;\n  document.getElementById(\"displayScore\").innerHTML = ` ${score}`;\n}\n\nfunction updateTimer() {\n  const minutes = Math.floor(timeInSeconds / 60);\n  const seconds = timeInSeconds % 60;\n\n  const displayTime = `${String(minutes).padStart(2, \"0\")}:${String(\n    seconds,\n  ).padStart(2, \"0\")}`;\n  document.getElementById(\"timer\").innerText = displayTime;\n\n  const progressBar = document.getElementById(\"progress-bar\");\n\n  const percentage = (timeInSeconds / maxTime) * 100;\n  progressBar.style.width = `${percentage}%`;\n}\n\nfunction addTime(time) {\n  timeInSeconds = Math.min(timeInSeconds + time, maxTime);\n  updateTimer();\n}\n\nfunction startTimer() {\n  setMaxTime();\n  timer = setInterval(() => {\n    if (timeInSeconds > 0) {\n      timeInSeconds--;\n      updateTimer();\n    } else {\n      clearInterval(timer);\n      toLeaderboard();\n    }\n  }, 1000);\n}\n\nwindow.addEventListener(\"load\", () => {\n  const user = sessionStorage.getItem(\"USER\");\n  document.getElementById(\"displayName\").innerHTML = ` ${user}`;\n  document.getElementById(\"displayScore\").innerHTML = ` ${score}`;\n  const endGameBtn = document.getElementById(\"btn-endGame\");\n  endGameBtn.addEventListener(\"click\", toLeaderboard);\n\n  startTimer();\n});\n\nexport { updateScore, addTime };\n"]}